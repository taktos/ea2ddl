# /---------------------------------------------------------------------------
# basicInfoMap: (Required)
#
# The basic information for the tasks of DBFlute.
# You should specify before your first generating.
# 
# Core Properties:
# o database: (Required)
# o targetLanguage: (Required)
# o targetContainer: (Required)
# o packageBase: (Required)
# 
# Adjustment Properties:
# o java.dir: (NotRequired - Default Java:'../src/main/java' CSharp:'../source')
# o isJavaNameOfTableSameAsDbName: (NotRequired - Default 'false')
# o isJavaNameOfColumnSameAsDbName: (NotRequired - Default 'false')
# o projectPrefix: (NotRequired - Default '')
# o classAuthor: (NotRequired - Default 'DBFlute(AutoGenerator)')
# o flatDirectoryPackage (NotRequired - Default '') *CSharp Only
# o omitDirectoryPackage (NotRequired - Default '') *CSharp Only
# 
# *The line that starts with '#' means comment-out.
#
map:{
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o database: (Required)
    #  This is the target database, only considered when generating
    #  the SQL for your DBFlute project.
    #  Your possible choices are:
    #
    #    h2, derby, mysql, postgresql, oracle, db2, mssql,
    # 
    ; database = msaccess
    # - - - - - - - - - -/
    
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o targetLanguage: (Required)
    #  The target language.
    #  Your possible choices are:
    # 
    #       java, csharp
    # 
    ; targetLanguage = java
    # - - - - - - - - - -/
    
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o targetContainer: (Required)
    #  The target DI container.
    #  If your target language is 'csharp', you can specify 'seasar' only.
    #  Your possible choices are:
    # 
    #       seasar, spring, lucy, guice
    # 
    ; targetContainer = seasar
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o packageBase: (Required)
    #  The base directory of package for generated class.
    #  The class package is 'this property value + detail package value'.
    #  However, detail packages have default value so basically
    #  you only have to specify the property 'packageBase'.
    #  If this property is specified and detail package properties is not specified, 
    #  Then the packages of generated class are as follows:
    #
    #  ex) packageBase = com.example.dbflute.basic.dbflute
    #        baseCommonPackage       --> com.example.dbflute.basic.dbflute.allcommon
    #        baseBehaviorPackage     --> com.example.dbflute.basic.dbflute.bsbhv
    #        baseEntityPackage       --> com.example.dbflute.basic.dbflute.bsentity
    #        conditionBeanPackage    --> com.example.dbflute.basic.dbflute.cbean
    #        extendedBehaviorPackage --> com.example.dbflute.basic.dbflute.exbhv
    #        extendedEntityPackage   --> com.example.dbflute.basic.dbflute.exentity
    #
    #  The detail package properties:
    #
    #   o baseCommonPackage:            (Default Java:'allcommon' C#:'AllCommon')
    #   o baseBehaviorPackage:          (Default Java:'bsbhv'     C#:'BsBhv')
    #   o baseDaoPackage:               (Default Java: ---        C#:'BsDao')
    #   o baseEntityPackage:            (Default Java:'bsentity'  C#:'BsEntity')
    #   o conditionBeanPackage:         (Default Java:'cbean'     C#:'CBean')
    #   o extendedBehaviorPackage:      (Default Java:'exbhv'     C#:'ExBhv')
    #   o extendedDaoPackage:           (Default Java: ---        C#:'ExDao')
    #   o extendedEntityPackage:        (Default Java:'exentity'  C#:'ExEntity')
    #   o extendedConditionBeanPackage: (Default same as conditionBeanPackage)
    # 
    ; packageBase = jp.sourceforge.ea2ddl.dao
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o java.dir: (NotRequired - Default Java:'../src/main/java' CSharp:'../source')
    #  The base output directory for generating.
    #  Basically you don't need to specify this if the project style is as follows:
    #
    #   *Java Project Style
    #     If this value is '../src/main/java' and your project type is under maven,
    #     you don't need to set up this property!
    #
    #     {app-project}
    #         |
    #         |-dbflute_[project]
    #         |       |-build-[project].properties
    #         |       |-...
    #         |
    #         |-src/main/java         // *Here!
    #         |-src/main/resources
    #         |-...
    #
    #   *CSharp Project Style
    #     [app-solution]/dbflute_[project]/build-[project].properties
    #     [app-solution]/mydbflute/dbflute-0.6.0
    #     [app-solution]/source/[app-solution].sln
    #     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/AllCommon
    #     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/BsBhv
    #     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/...
    #     [app-solution]/source/[app-project(top-namespace)]/Resources/DBFlute.dicon
    #     [app-solution]/source/[app-project(top-namespace)]/Resources/Ado.dicon
    #
    ; java.dir = ../../ea2ddl-dao/src/main/java
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isJavaNameOfTableSameAsDbName: (NotRequired - Default 'false')
    #  Is the class name same as table name(on DB)?
    #  Basically you don't need this if the style of table name is like 'ABC_DEF'.
    #    [true]
    #      The class name is same as table DB name.
    #      ex) If the table name is 'OrderDetail', the class name is 'OrderDetail'.
    # 
    #    [false]
    #      ex) If the table name is 'ORDER_DETAIL', the class name is 'OrderDetail'.
    #      ex) If the table name is 'OrderDetail', the class name is 'Orderdetail'.
    #
    #; isJavaNameOfTableSameAsDbName = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isJavaNameOfColumnSameAsDbName: (NotRequired - Default 'false')
    #  Is the class name same as column name(on DB)?
    #  Basically you don't need this if the style of column name is like 'ABC_DEF'.
    #    [true]
    #      The class name is same as table DB name.
    #      ex) If the column name is 'OrderDetailId', the class name is 'OrderDetailId'.
    # 
    #    [false]
    #      ex) If the column name is 'ORDER_DETAIL_ID', the class name is 'OrderDetailId'.
    #      ex) If the column name is 'OrderDetailId',  the class name is 'Orderdetailid'.
    #
    #; isJavaNameOfColumnSameAsDbName = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o projectPrefix: (NotRequired - Default '')
    #  If the value is 'Ld', all class names are 'LdXxx'.
    #  Basically you don't need this if you don't want the common prefix of class name.
    # 
    #; projectPrefix = Ld
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o classAuthor: (NotRequired - Default 'DBFlute(AutoGenerator)')
    #  The value of the author tag in java-doc of generated classes.
    #  All classes are target.
    # 
    # @JavaOnly
    #; classAuthor = DBFlute(AutoGenerator)
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o flatDirectoryPackage (NotRequired - Default '') *CSharp Only
    #  ex) Aaa.Bbb.DBFlute --> Directory: source/Aaa.Bbb.DBFlute/AllCommon
    # 
    # @CSharpOnly
    #; flatDirectoryPackage = Aaa.Bbb.DBFlute
    # - - - - - - - - - -/
    
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o omitDirectoryPackage (NotRequired - Default '') *CSharp Only
    #  ex) Aaa --> Directory: source/Bbb/DBFlute/AllCommon
    # 
    # @CSharpOnly
    #; omitDirectoryPackage = Aaa
    # - - - - - - - - - -/
}
# ----------------/