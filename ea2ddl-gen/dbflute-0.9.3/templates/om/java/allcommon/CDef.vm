${database.allClassCopyright}package ${glPackageBaseCommon};

import java.util.HashMap;
import java.util.Map;

/**
 * The definition class that has classification.
 * @author ${database.ClassAuthor}
 */
public class ${glCDef} {

#foreach ($classificationName in $database.classificationNameList)
#set ($classificationMapList = $database.classificationDefinitionMap.get($classificationName))
#set ($existTop = false)
#if ($database.classificationTopDefinitionMap.containsKey($classificationName))
  #set ($classificationTopMap = $database.classificationTopDefinitionMap.get($classificationName))
  #set ($existTop = true)
#end
#if ($database.isInitNumber($classificationName))
    // The classification name that its initial character is number is unsupported!
    // public enum ${classificationName} {
    // }

#else
#if ($existTop && $classificationTopMap.containsKey('topComment'))
    /**
     * $classificationTopMap.get('topComment')
     */
#end
    public enum ${classificationName} {
#set ($count = 0)
#foreach ($classificationMap in $classificationMapList)
#if ($count != 0)
        ,
#end
        /** $database.buildClassificationApplicationComment($classificationMap) */
        ${classificationMap.get('name')}($database.buildClassificationCodeAliasVariables($classificationMap))
#set ($count = $count + 1)
#end
        ;
        private static final Map<String, ${classificationName}> _codeValueMap = new HashMap<String, ${classificationName}>();
        static { for (${classificationName} value : values()) { _codeValueMap.put(value.code().toLowerCase(), value); } }
        private String _code; private String _alias;
        private ${classificationName}(String code, String alias) { _code = code; _alias = alias; }
        public String code() { return _code; } public String alias() { return _alias; }
        public static ${classificationName} codeOf(Object code) {
            if (code == null) { return null; } return _codeValueMap.get(code.toString().toLowerCase());
        }
    }

#end
#end
}
