#set ($myClassName = "${glSqlClauseInterfaceName}${database.DaoGenDbName}")

using System;

namespace ${glPackageBaseCommonSqlClause} {

[System.Serializable]
public class ${myClassName} : ${glSqlClauseAbstractName} {

    protected String _fetchScopeSqlSuffix = "";
    protected String _lockSqlSuffix = "";

    public ${myClassName}(String tableName)
        : base(tableName) {}

	protected override OrderByNullsSetupper createOrderByNullsSetupper() {
	    return new OrderByNullsSetupperByCaseWhen();
	}
	
    protected override void doFetchFirst() {
        doFetchPage();
    }

    protected override void doFetchPage() {
        _fetchScopeSqlSuffix = " limit " + this.getPageStartIndex() + ", " + this.getFetchSize();
    }

    protected override void doClearFetchPageClause() {
        _fetchScopeSqlSuffix = "";
    }

    public override ${glSqlClauseInterfaceName} lockForUpdate() {
        _lockSqlSuffix = " for update";
        return this;
    }

    protected override String createSelectHint() {
        return "";
    }

    protected override String createFromBaseTableHint() {
        return "";
    }

    protected override String createFromHint() {
        return "";
    }

    protected override String createSqlSuffix() {
        return _fetchScopeSqlSuffix + _lockSqlSuffix;
    }
    
    // [DBFlute-0.7.9]
    // ===================================================================================
    //                                                               Query Update Override
    //                                                               =====================
    protected override bool isUpdateSubQueryUseLocalTableSupported() {
        return false;
    }
}
	
}
