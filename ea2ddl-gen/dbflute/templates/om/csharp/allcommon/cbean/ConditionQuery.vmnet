
using System;
using ${glPackageBaseCommonCValue};
using ${glPackageBaseCommonSqlClause};

namespace ${glPackageBaseCommonCBean} {

// JavaLike
public interface ${glConditionQueryInterfaceName} {

    // ===================================================================================
    //                                                                          Table Name
    //                                                                          ==========
    String getTableDbName();
    String getTableSqlName();
	
    // ===================================================================================
    //                                                                  Important Accessor
    //                                                                  ==================
    ${glConditionQueryInterfaceName} getChildQuery();
    ${glSqlClauseName} getSqlClause();
    String getAliasName();
    String getRealAliasName();
    String getRealColumnName(String columnName);
    int getNestLevel();
    int getNextNestLevel();
    bool isBaseQuery(${glConditionQueryInterfaceName} query);
	int getSubQueryLevel();
	String getForeignPropertyName();
    String getRelationPath();
	
    // ===================================================================================
    //                                                                 Reflection Invoking
    //                                                                 ===================
    ${glConditionValueName} invokeValue(String columnFlexibleName);
    void invokeQuery(String columnFlexibleName, String conditionKeyName, Object value);
    void invokeOrderBy(String columnFlexibleName, bool isAsc);
    ${glConditionQueryInterfaceName} invokeForeignCQ(String foreignPropertyName);
}

}
