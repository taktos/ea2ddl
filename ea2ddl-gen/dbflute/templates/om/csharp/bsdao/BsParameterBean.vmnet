
#set ($myClassName = "${myExtendedParameterBeanClassName}")

using System;
using System.Text;
#if ($database.isPmbMetaDataForProcedure($pmbClassName))

using ${glPackageBaseCommonCBeanOutsidesql};
#end

namespace ${glPackageExtendedParameterBean} {

    /// <summary>
    /// The parametaer-bean of ${pmbClassName}.
    /// Author: ${database.ClassAuthor}
    /// </summary>
    [System.Serializable]
#if ($database.isPmbMetaDataForProcedure($pmbClassName))
    public partial class ${myClassName} : ${glProcedurePmbName} {
#else
    public partial class ${myClassName} ${database.getPmbMetaDataSuperClassDefinition($pmbClassName)}{
#end
#if ($database.isPmbMetaDataForProcedure($pmbClassName))

        // ===============================================================================
        //                                                                      Definition
        //                                                                      ==========
        // -------------------------------------------------
        //                               Procedure Parameter
        //                               -------------------
#foreach ($propertyName in $database.getPmbMetaDataPropertySet($pmbClassName))
#set ($propertyType = $database.getPmbMetaDataPropertyType($pmbClassName, $propertyName))
#set ($columnName = $database.getPmbMetaDataPropertyColumnName($pmbClassName, $propertyName))
#if ($database.isPmbMetaDataPropertyOptionProcedureParameterIn($pmbClassName, $propertyName))
        public static readonly String ${propertyName}_PROCEDURE_PARAMETER = "${columnName}, in";
#elseif ($database.isPmbMetaDataPropertyOptionProcedureParameterOut($pmbClassName, $propertyName))
        public static readonly String ${propertyName}_PROCEDURE_PARAMETER = "${columnName}, out";
#elseif ($database.isPmbMetaDataPropertyOptionProcedureParameterInOut($pmbClassName, $propertyName))
        public static readonly String ${propertyName}_PROCEDURE_PARAMETER = "${columnName}, inout";
#elseif ($database.isPmbMetaDataPropertyOptionProcedureParameterReturn($pmbClassName, $propertyName))
        public static readonly String ${propertyName}_PROCEDURE_PARAMETER = "${columnName}, return";
#end
#end
#end

        // ===============================================================================
        //                                                                       Attribute
        //                                                                       =========
#foreach ($propertyName in $database.getPmbMetaDataPropertySet($pmbClassName))
#set ($propertyType = $database.getPmbMetaDataPropertyType($pmbClassName, $propertyName))
        protected ${propertyType} _${propertyName};
#if ($database.isPmbMetaDataPropertyOptionLikeSearch($pmbClassName, $propertyName))
        protected ${glPackageBaseCommonCOption}.${glConditionOptionLikeSearchName} _${propertyName}InternalLikeSearchOption;

#end
#end
    
#if ($database.isPmbMetaDataForProcedure($pmbClassName))
        // ===============================================================================
        //                                                                       Procedure
        //                                                                       =========
        public String ProcedureName { get {
            return "${database.getPmbMetaDataProcedureName($pmbClassName)}";
        }}

#end
        // ===============================================================================
        //                                                                          Helper
        //                                                                          ======
        protected String ConvertEmptyToNullIfString(String value) {
            return FilterRemoveEmptyString(value);
        }

        protected String FilterRemoveEmptyString(String value) {
            return ((value != null && !"".Equals(value)) ? value : null);
        }

        // ===============================================================================
        //                                                                  Basic Override
        //                                                                  ==============
        public override String ToString() {
            String delimiter = ",";
            StringBuilder sb = new StringBuilder();
#foreach ($propertyName in $database.getPmbMetaDataPropertySet($pmbClassName))
            sb.Append(delimiter).Append(_${propertyName});
#end
            if (sb.Length > 0) { sb.Remove(0, delimiter.Length); }
            sb.Insert(0, "{").Append("}");
            return sb.ToString();
        }

        // ===============================================================================
        //                                                                        Accessor
        //                                                                        ========
#foreach ($propertyName in $database.getPmbMetaDataPropertySet($pmbClassName))
#set ($propertyType = $database.getPmbMetaDataPropertyType($pmbClassName, $propertyName))
        public ${propertyType} ${database.initCap($propertyName)} {
#if ($propertyType.endsWith("String"))
            get { return ($propertyType)ConvertEmptyToNullIfString(_${propertyName}); }
#else
            get { return _${propertyName}; }
#end
            set { _${propertyName} = value; }
        }
#if ($database.isPmbMetaDataPropertyOptionLikeSearch($pmbClassName, $propertyName))

        public void Set${database.initCap($propertyName)}(${propertyType} ${propertyName}, ${glPackageBaseCommonCOption}.${glConditionOptionLikeSearchName} ${propertyName}Option) {
            this.${database.initCap($propertyName)} = ${propertyName};
            _${propertyName}InternalLikeSearchOption = ${propertyName}Option;
        }

        public ${glPackageBaseCommonCOption}.${glConditionOptionLikeSearchName} ${database.initCap($propertyName)}InternalLikeSearchOption { get {
            return _${propertyName}InternalLikeSearchOption;
        }}
#end
#if ($database.isPmbMetaDataPropertyOptionClassification($pmbClassName, $propertyName))
#set ($classificationName = $database.getPmbMetaDataPropertyOptionClassificationName($pmbClassName, $propertyName))
#foreach ($classificationMap in $database.getPmbMetaDataPropertyOptionClassificationMapList($pmbClassName, $propertyName))

        public void Set${database.initCap($propertyName)}_${classificationMap.get('name')}() {
            this.${database.initCap($propertyName)} = ${glPackageBaseCommon}.${glClassificationDefinition}.${database.classificationCodeVariableNamePrefix}${classificationName}_${classificationMap.get('name')};
        }
#end
#end

#end
    }
}
